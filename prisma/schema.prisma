generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int     @id @default(autoincrement())
  username  String  @unique
  email     String  @unique
  password  String
  role      String  @default("user") // admin, user
  isActive  Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  mahasiswa Mahasiswa[]
  alumni    Alumni[]
}

model Mahasiswa {
  id        Int     @id @default(autoincrement())
  nim       String  @unique
  nama      String
  jurusan   String
  angkatan  Int
  email     String
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Alumni {
  id         Int      @id @default(autoincrement())
  nim        String   @unique
  nama       String
  jurusan    String
  angkatan   Int
  tahunLulus Int
  email      String
  userId     Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  user       User               @relation(fields: [userId], references: [id], onDelete: Cascade)
  pekerjaans PekerjaanAlumni[]
}

model PekerjaanAlumni {
  id                  Int      @id @default(autoincrement())
  alumniId            Int
  namaPerusahaan      String
  posisiJabatan       String
  bidangIndustri      String
  lokasiKerja         String
  tanggalMulaiKerja   String
  tanggalSelesaiKerja String?
  statusPekerjaan     String   @default("aktif")
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  alumni Alumni @relation(fields: [alumniId], references: [id], onDelete: Cascade)
}
